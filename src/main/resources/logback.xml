<?xml version="1.0" encoding="UTF-8"?>
<!--scan 当配置文件发生改变 就会改变logback配置规则
    scanPeriod: 扫描变化时间间隔
-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!--定义参数常量-->
    <!--TRACE<DEBUG<INFO<WARN<ERROR-->
    <!--logger.trace("msg") logger.debug-->
    <property name="log.level" value="debug"/>
    <!--日志最大保存时间-->
    <property name="log.maxHistory" value="30"/>
    <!--日志存储根路径-->
    <property name="log.filePath" value="/Users/kHRYSTAL/IdeaProjects/market/logs"/>
    <!--日志展现时间格式 与所在线程 级别 所在的类 消息 换行-->
    <property name="log.pattern"
              value="％d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -%msg%n"/>
    <!--配置输出日志的位置 可以是控制台也可以是文件-->
    <appender name="consoleAppender" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
    </appender>
    <!--DEBUG 随着日志size的增大 文件也跟随增大-->
    <appender name="debugAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--文件路径-->
        <file>${log.filePath}/debug.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--文件名称-->
            <fileNamePattern>
                ${log.filePath}/debug/debug.%d{yyyy-MM-dd}.log.gz
            </fileNamePattern>
            <!--文件最大保存历史数量-->
            <MaxHistory>${log.maxHistory}</MaxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!--只记录debug的日志 不达到DEBUG的不记录到日志中-->
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMisMatch>DENY</onMisMatch>
        </filter>
    </appender>
    <!--INFO-->
    <appender name="infoAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--文件路径-->
        <file>${log.filePath}/info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--文件名称-->
            <fileNamePattern>
                ${log.filePath}/info/info.%d{yyyy-MM-dd}.log.gz
            </fileNamePattern>
            <!--文件最大保存历史数量-->
            <MaxHistory>${log.maxHistory}</MaxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!--只记录info的日志 不是info的不记录到日志中-->
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMisMatch>DENY</onMisMatch>
        </filter>
    </appender>

    <!--ERROR-->
    <appender name="errorAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--文件路径-->
        <file>${log.filePath}/error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--文件名称-->
            <fileNamePattern>
                ${log.filePath}/error/error.%d{yyyy-MM-dd}.log.gz
            </fileNamePattern>
            <!--文件最大保存历史数量-->
            <MaxHistory>${log.maxHistory}</MaxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!--只记录error的日志 不是error的不记录到日志中-->
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMisMatch>DENY</onMisMatch>
        </filter>
    </appender>
    <!--只有logger产生输出 继承于root标签 修改level为输出debug级别的日志-->
    <logger name="me.khrystal.market" level="${log.level}" additivity="true">
        <appender-ref ref="debugAppender"/>
        <appender-ref ref="infoAppender"/>
        <appender-ref ref="errorAppender"/>
    </logger>
    <!--默认只输出info级别日志-->
    <root level="info">
        <appender-ref ref="consoleAppender"/>
    </root>
</configuration>